2023/06/10 21:47:14 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]
    CUDA available: True
    numpy_random_seed: 962499431
    GPU 0: NVIDIA GeForce RTX 3080
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.3, V11.3.109
    GCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
    PyTorch: 1.10.0+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.11.1+cu113
    OpenCV: 4.7.0
    MMEngine: 0.7.1

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/10 21:47:16 - mmengine - INFO - Config:
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=5),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', interval=10, max_keep_ckpts=2,
        save_best='auto'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth'
resume = False
train_cfg = dict(
    type='EpochBasedTrainLoop',
    max_epochs=200,
    val_interval=10,
    dynamic_intervals=[(280, 1)])
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0, end=30),
    dict(
        type='CosineAnnealingLR',
        eta_min=9.375000000000001e-06,
        begin=100,
        end=200,
        T_max=100,
        by_epoch=True,
        convert_to_iter_based=True)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.0001875, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
auto_scale_lr = dict(enable=False, base_batch_size=16)
dataset_type = 'CocoDataset'
data_root = 'balloon_dataset/'
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='CachedMosaic',
        img_scale=(640, 640),
        pad_val=114.0,
        max_cached_images=20,
        random_pop=False),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='CachedMixUp',
        img_scale=(640, 640),
        ratio_range=(1.0, 1.0),
        max_cached_images=10,
        random_pop=False,
        pad_val=(114, 114, 114),
        prob=0.5),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(640, 640), keep_ratio=True),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=12,
    num_workers=16,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=None,
    dataset=dict(
        type='CocoDataset',
        data_root='balloon_dataset/',
        ann_file='balloon/train/balloon_train.json',
        data_prefix=dict(img='balloon/train/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='CachedMosaic',
                img_scale=(640, 640),
                pad_val=114.0,
                max_cached_images=20,
                random_pop=False),
            dict(
                type='RandomResize',
                scale=(1280, 1280),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='CachedMixUp',
                img_scale=(640, 640),
                ratio_range=(1.0, 1.0),
                max_cached_images=10,
                random_pop=False,
                pad_val=(114, 114, 114),
                prob=0.5),
            dict(type='PackDetInputs')
        ],
        backend_args=None,
        metainfo=dict(classes=('balloon', ), palette=[(220, 20, 60)])),
    pin_memory=False)
val_dataloader = dict(
    batch_size=1,
    num_workers=16,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='balloon_dataset/',
        ann_file='balloon/val/balloon_val.json',
        data_prefix=dict(img='balloon/val/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(classes=('balloon', ), palette=[(220, 20, 60)])))
test_dataloader = dict(
    batch_size=1,
    num_workers=16,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='balloon_dataset/',
        ann_file='balloon/val/balloon_val.json',
        data_prefix=dict(img='balloon/val/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(classes=('balloon', ), palette=[(220, 20, 60)])))
val_evaluator = dict(
    type='CocoMetric',
    ann_file='balloon_dataset/balloon/val/balloon_val.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
test_evaluator = dict(
    type='CocoMetric',
    ann_file='balloon_dataset/balloon/val/balloon_val.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
tta_model = dict(
    type='DetTTAModel',
    tta_cfg=dict(nms=dict(type='nms', iou_threshold=0.6), max_per_img=100))
img_scales = [(640, 640), (320, 320), (960, 960)]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale': (640, 640),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (320, 320),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (960, 960),
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 1.0
                    }, {
                        'type': 'RandomFlip',
                        'prob': 0.0
                    }],
                    [{
                        'type': 'Pad',
                        'size': (960, 960),
                        'pad_val': {
                            'img': (114, 114, 114)
                        }
                    }], [{
                        'type': 'LoadAnnotations',
                        'with_bbox': True
                    }],
                    [{
                        'type':
                        'PackDetInputs',
                        'meta_keys':
                        ('img_id', 'img_path', 'ori_shape', 'img_shape',
                         'scale_factor', 'flip', 'flip_direction')
                    }]])
]
model = dict(
    type='RTMDet',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[103.53, 116.28, 123.675],
        std=[57.375, 57.12, 58.395],
        bgr_to_rgb=False,
        batch_augments=None),
    backbone=dict(
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=0.167,
        widen_factor=0.375,
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True),
        init_cfg=dict(
            type='Pretrained',
            prefix='backbone.',
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
        ),
        frozen_stages=4),
    neck=dict(
        type='CSPNeXtPAFPN',
        in_channels=[96, 192, 384],
        out_channels=96,
        num_csp_blocks=1,
        expand_ratio=0.5,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    bbox_head=dict(
        type='RTMDetSepBNHead',
        num_classes=1,
        in_channels=96,
        stacked_convs=2,
        feat_channels=96,
        anchor_generator=dict(
            type='MlvlPointGenerator', offset=0, strides=[8, 16, 32]),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        with_objectness=False,
        exp_on_reg=False,
        share_conv=True,
        pred_kernel_size=1,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    train_cfg=dict(
        assigner=dict(type='DynamicSoftLabelAssigner', topk=13),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=30000,
        min_bbox_size=0,
        score_thr=0.001,
        nms=dict(type='nms', iou_threshold=0.65),
        max_per_img=300))
train_pipeline_stage2 = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(640, 640),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
max_epochs = 200
stage2_num_epochs = 20
base_lr = 0.0001875
interval = 10
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='PipelineSwitchHook',
        switch_epoch=195,
        switch_pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='RandomResize',
                scale=(640, 640),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='PackDetInputs')
        ])
]
checkpoint = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
metainfo = dict(classes=('balloon', ), palette=[(220, 20, 60)])
num_classes = 1
train_batch_size_per_gpu = 12
train_num_workers = 16
val_batch_size_per_gpu = 1
val_num_workers = 16
num_epochs_stage2 = 5
launcher = 'none'
work_dir = './work_dirs/balloon_rtmdet'

2023/06/10 21:47:24 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/10 21:47:24 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
2023/06/10 21:47:26 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
2023/06/10 21:47:28 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([12, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.conv.weight - torch.Size([12, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.conv.weight - torch.Size([24, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.conv.weight - torch.Size([48, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([24, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([24, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.conv.weight - torch.Size([96, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.conv.weight - torch.Size([192, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.conv.weight - torch.Size([384, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.conv.weight - torch.Size([384, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

neck.reduce_layers.0.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.0.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.main_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.short_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.final_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.main_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.short_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.final_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.conv.weight - torch.Size([96, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.conv.weight - torch.Size([96, 384, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.rtm_cls.0.weight - torch.Size([1, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.0.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.weight - torch.Size([1, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.weight - torch.Size([1, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  
2023/06/10 21:47:35 - mmengine - INFO - Load checkpoint from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth
2023/06/10 21:47:35 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/10 21:47:35 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/10 21:47:35 - mmengine - INFO - Checkpoints will be saved to /root/code/mmdetection/work_dirs/balloon_rtmdet.
2023/06/10 21:47:40 - mmengine - INFO - Epoch(train)   [1][5/6]  lr: 2.5864e-05  eta: 0:19:32  time: 0.9809  data_time: 0.8198  memory: 1534  loss: 2.7282  loss_cls: 2.0601  loss_bbox: 0.6680
2023/06/10 21:47:40 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:47:42 - mmengine - INFO - Epoch(train)   [2][5/6]  lr: 6.4656e-05  eta: 0:12:33  time: 0.6336  data_time: 0.4849  memory: 1533  loss: 2.7370  loss_cls: 2.0771  loss_bbox: 0.6599
2023/06/10 21:47:42 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:47:45 - mmengine - INFO - Epoch(train)   [3][5/6]  lr: 1.0345e-04  eta: 0:10:30  time: 0.5333  data_time: 0.3885  memory: 1538  loss: 2.7345  loss_cls: 2.0760  loss_bbox: 0.6585
2023/06/10 21:47:45 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:47:46 - mmengine - INFO - Epoch(train)   [4][5/6]  lr: 1.4224e-04  eta: 0:09:24  time: 0.4793  data_time: 0.3373  memory: 1533  loss: 2.7620  loss_cls: 2.1311  loss_bbox: 0.6309
2023/06/10 21:47:47 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:47:48 - mmengine - INFO - Epoch(train)   [5][5/6]  lr: 1.8103e-04  eta: 0:08:41  time: 0.4451  data_time: 0.3052  memory: 1530  loss: 2.7462  loss_cls: 2.1236  loss_bbox: 0.6226
2023/06/10 21:47:48 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:47:51 - mmengine - INFO - Epoch(train)   [6][5/6]  lr: 1.8750e-04  eta: 0:08:21  time: 0.4306  data_time: 0.2912  memory: 1537  loss: 2.7240  loss_cls: 2.1137  loss_bbox: 0.6103
2023/06/10 21:47:51 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:47:52 - mmengine - INFO - Epoch(train)   [7][5/6]  lr: 1.8750e-04  eta: 0:07:59  time: 0.4137  data_time: 0.2738  memory: 1554  loss: 2.6649  loss_cls: 2.0670  loss_bbox: 0.5979
2023/06/10 21:47:52 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:47:55 - mmengine - INFO - Epoch(train)   [8][5/6]  lr: 1.8750e-04  eta: 0:07:47  time: 0.4057  data_time: 0.2655  memory: 1551  loss: 2.6093  loss_cls: 2.0326  loss_bbox: 0.5767
2023/06/10 21:47:55 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:47:56 - mmengine - INFO - Epoch(train)   [9][5/6]  lr: 1.8750e-04  eta: 0:07:34  time: 0.3273  data_time: 0.1898  memory: 1526  loss: 2.5185  loss_cls: 1.9691  loss_bbox: 0.5493
2023/06/10 21:47:57 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:47:59 - mmengine - INFO - Epoch(train)  [10][5/6]  lr: 1.8750e-04  eta: 0:07:27  time: 0.3297  data_time: 0.1917  memory: 1534  loss: 2.3826  loss_cls: 1.8638  loss_bbox: 0.5188
2023/06/10 21:47:59 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:47:59 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/10 21:48:04 - mmengine - INFO - Epoch(val)  [10][ 5/13]    eta: 0:00:04  time: 0.6069  data_time: 0.5864  memory: 199  
2023/06/10 21:48:04 - mmengine - INFO - Epoch(val)  [10][10/13]    eta: 0:00:00  time: 0.3129  data_time: 0.2935  memory: 105  
2023/06/10 21:48:04 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:48:04 - mmengine - INFO - bbox_mAP_copypaste: 0.525 0.644 0.623 0.000 0.087 0.688
2023/06/10 21:48:04 - mmengine - INFO - Epoch(val) [10][13/13]  coco/bbox_mAP: 0.5250  coco/bbox_mAP_50: 0.6440  coco/bbox_mAP_75: 0.6230  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.0870  coco/bbox_mAP_l: 0.6880  data_time: 0.2259  time: 0.2451
2023/06/10 21:48:07 - mmengine - INFO - The best checkpoint with 0.5250 coco/bbox_mAP at 10 epoch is saved to best_coco/bbox_mAP_epoch_10.pth.
2023/06/10 21:48:08 - mmengine - INFO - Epoch(train)  [11][5/6]  lr: 1.8750e-04  eta: 0:07:16  time: 0.3251  data_time: 0.1863  memory: 1551  loss: 2.2316  loss_cls: 1.7491  loss_bbox: 0.4825
2023/06/10 21:48:08 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:10 - mmengine - INFO - Epoch(train)  [12][5/6]  lr: 1.8750e-04  eta: 0:07:10  time: 0.3268  data_time: 0.1883  memory: 1527  loss: 2.0154  loss_cls: 1.5655  loss_bbox: 0.4499
2023/06/10 21:48:10 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:13 - mmengine - INFO - Epoch(train)  [13][5/6]  lr: 1.8750e-04  eta: 0:07:06  time: 0.3334  data_time: 0.1936  memory: 1539  loss: 1.8020  loss_cls: 1.3864  loss_bbox: 0.4156
2023/06/10 21:48:13 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:14 - mmengine - INFO - Epoch(train)  [14][5/6]  lr: 1.8750e-04  eta: 0:06:59  time: 0.3277  data_time: 0.1880  memory: 1530  loss: 1.6378  loss_cls: 1.2477  loss_bbox: 0.3901
2023/06/10 21:48:15 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:17 - mmengine - INFO - Epoch(train)  [15][5/6]  lr: 1.8750e-04  eta: 0:06:57  time: 0.3360  data_time: 0.1966  memory: 1538  loss: 1.4576  loss_cls: 1.0933  loss_bbox: 0.3643
2023/06/10 21:48:17 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:19 - mmengine - INFO - Epoch(train)  [16][5/6]  lr: 1.8750e-04  eta: 0:06:52  time: 0.3349  data_time: 0.1961  memory: 1543  loss: 1.3035  loss_cls: 0.9549  loss_bbox: 0.3487
2023/06/10 21:48:19 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:21 - mmengine - INFO - Epoch(train)  [17][5/6]  lr: 1.8750e-04  eta: 0:06:47  time: 0.3364  data_time: 0.1978  memory: 1529  loss: 1.1663  loss_cls: 0.8310  loss_bbox: 0.3352
2023/06/10 21:48:21 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:23 - mmengine - INFO - Epoch(train)  [18][5/6]  lr: 1.8750e-04  eta: 0:06:42  time: 0.3321  data_time: 0.1927  memory: 1530  loss: 1.0730  loss_cls: 0.7495  loss_bbox: 0.3235
2023/06/10 21:48:23 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:25 - mmengine - INFO - Epoch(train)  [19][5/6]  lr: 1.8750e-04  eta: 0:06:39  time: 0.3358  data_time: 0.1969  memory: 1533  loss: 1.0082  loss_cls: 0.6936  loss_bbox: 0.3146
2023/06/10 21:48:25 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:27 - mmengine - INFO - Epoch(train)  [20][5/6]  lr: 1.8750e-04  eta: 0:06:34  time: 0.3327  data_time: 0.1936  memory: 1532  loss: 0.9578  loss_cls: 0.6501  loss_bbox: 0.3076
2023/06/10 21:48:27 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:27 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/10 21:48:29 - mmengine - INFO - Epoch(val)  [20][ 5/13]    eta: 0:00:00  time: 0.1884  data_time: 0.1693  memory: 199  
2023/06/10 21:48:29 - mmengine - INFO - Epoch(val)  [20][10/13]    eta: 0:00:00  time: 0.1515  data_time: 0.1326  memory: 105  
2023/06/10 21:48:29 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:48:30 - mmengine - INFO - bbox_mAP_copypaste: 0.718 0.830 0.808 0.000 0.437 0.846
2023/06/10 21:48:30 - mmengine - INFO - Epoch(val) [20][13/13]  coco/bbox_mAP: 0.7180  coco/bbox_mAP_50: 0.8300  coco/bbox_mAP_75: 0.8080  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4370  coco/bbox_mAP_l: 0.8460  data_time: 0.1174  time: 0.1362
2023/06/10 21:48:30 - mmengine - INFO - The previous best checkpoint /root/code/mmdetection/work_dirs/balloon_rtmdet/best_coco/bbox_mAP_epoch_10.pth is removed
2023/06/10 21:48:32 - mmengine - INFO - The best checkpoint with 0.7180 coco/bbox_mAP at 20 epoch is saved to best_coco/bbox_mAP_epoch_20.pth.
2023/06/10 21:48:34 - mmengine - INFO - Epoch(train)  [21][5/6]  lr: 1.8750e-04  eta: 0:06:33  time: 0.3366  data_time: 0.1971  memory: 1536  loss: 0.9368  loss_cls: 0.6316  loss_bbox: 0.3052
2023/06/10 21:48:34 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:36 - mmengine - INFO - Epoch(train)  [22][5/6]  lr: 1.8750e-04  eta: 0:06:30  time: 0.3409  data_time: 0.2017  memory: 1538  loss: 0.8785  loss_cls: 0.5855  loss_bbox: 0.2930
2023/06/10 21:48:36 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:38 - mmengine - INFO - Epoch(train)  [23][5/6]  lr: 1.8750e-04  eta: 0:06:27  time: 0.3357  data_time: 0.1964  memory: 1534  loss: 0.8549  loss_cls: 0.5642  loss_bbox: 0.2907
2023/06/10 21:48:38 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:40 - mmengine - INFO - Epoch(train)  [24][5/6]  lr: 1.8750e-04  eta: 0:06:25  time: 0.3381  data_time: 0.1993  memory: 1533  loss: 0.8224  loss_cls: 0.5397  loss_bbox: 0.2826
2023/06/10 21:48:40 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:42 - mmengine - INFO - Epoch(train)  [25][5/6]  lr: 1.8750e-04  eta: 0:06:22  time: 0.3394  data_time: 0.2004  memory: 1542  loss: 0.8185  loss_cls: 0.5377  loss_bbox: 0.2808
2023/06/10 21:48:42 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:45 - mmengine - INFO - Epoch(train)  [26][5/6]  lr: 1.8750e-04  eta: 0:06:23  time: 0.3550  data_time: 0.2165  memory: 1532  loss: 0.7769  loss_cls: 0.5024  loss_bbox: 0.2745
2023/06/10 21:48:45 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:47 - mmengine - INFO - Epoch(train)  [27][5/6]  lr: 1.8750e-04  eta: 0:06:19  time: 0.3537  data_time: 0.2156  memory: 1531  loss: 0.7449  loss_cls: 0.4727  loss_bbox: 0.2722
2023/06/10 21:48:47 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:49 - mmengine - INFO - Epoch(train)  [28][5/6]  lr: 1.8750e-04  eta: 0:06:17  time: 0.3601  data_time: 0.2221  memory: 1531  loss: 0.7725  loss_cls: 0.4977  loss_bbox: 0.2748
2023/06/10 21:48:49 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:51 - mmengine - INFO - Epoch(train)  [29][5/6]  lr: 1.8750e-04  eta: 0:06:15  time: 0.3570  data_time: 0.2192  memory: 1543  loss: 0.7816  loss_cls: 0.5078  loss_bbox: 0.2738
2023/06/10 21:48:52 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:53 - mmengine - INFO - Epoch(train)  [30][5/6]  lr: 1.8750e-04  eta: 0:06:12  time: 0.3526  data_time: 0.2148  memory: 1533  loss: 0.7677  loss_cls: 0.4961  loss_bbox: 0.2716
2023/06/10 21:48:53 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:48:53 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/10 21:48:56 - mmengine - INFO - Epoch(val)  [30][ 5/13]    eta: 0:00:00  time: 0.1195  data_time: 0.1006  memory: 196  
2023/06/10 21:48:56 - mmengine - INFO - Epoch(val)  [30][10/13]    eta: 0:00:00  time: 0.1055  data_time: 0.0867  memory: 105  
2023/06/10 21:48:56 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:48:56 - mmengine - INFO - bbox_mAP_copypaste: 0.727 0.843 0.837 0.000 0.414 0.858
2023/06/10 21:48:56 - mmengine - INFO - Epoch(val) [30][13/13]  coco/bbox_mAP: 0.7270  coco/bbox_mAP_50: 0.8430  coco/bbox_mAP_75: 0.8370  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4140  coco/bbox_mAP_l: 0.8580  data_time: 0.0801  time: 0.0989
2023/06/10 21:48:56 - mmengine - INFO - The previous best checkpoint /root/code/mmdetection/work_dirs/balloon_rtmdet/best_coco/bbox_mAP_epoch_20.pth is removed
2023/06/10 21:48:58 - mmengine - INFO - The best checkpoint with 0.7270 coco/bbox_mAP at 30 epoch is saved to best_coco/bbox_mAP_epoch_30.pth.
2023/06/10 21:49:00 - mmengine - INFO - Epoch(train)  [31][5/6]  lr: 1.8750e-04  eta: 0:06:10  time: 0.3571  data_time: 0.2193  memory: 1530  loss: 0.7861  loss_cls: 0.5094  loss_bbox: 0.2768
2023/06/10 21:49:01 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:03 - mmengine - INFO - Epoch(train)  [32][5/6]  lr: 1.8750e-04  eta: 0:06:08  time: 0.3582  data_time: 0.2200  memory: 1533  loss: 0.8105  loss_cls: 0.5271  loss_bbox: 0.2833
2023/06/10 21:49:03 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:05 - mmengine - INFO - Epoch(train)  [33][5/6]  lr: 1.8750e-04  eta: 0:06:05  time: 0.3582  data_time: 0.2196  memory: 1532  loss: 0.8020  loss_cls: 0.5225  loss_bbox: 0.2795
2023/06/10 21:49:05 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:07 - mmengine - INFO - Epoch(train)  [34][5/6]  lr: 1.8750e-04  eta: 0:06:02  time: 0.3456  data_time: 0.2071  memory: 1528  loss: 0.8031  loss_cls: 0.5258  loss_bbox: 0.2773
2023/06/10 21:49:07 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:09 - mmengine - INFO - Epoch(train)  [35][5/6]  lr: 1.8750e-04  eta: 0:05:59  time: 0.3454  data_time: 0.2071  memory: 1532  loss: 0.8005  loss_cls: 0.5240  loss_bbox: 0.2764
2023/06/10 21:49:09 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:11 - mmengine - INFO - Epoch(train)  [36][5/6]  lr: 1.8750e-04  eta: 0:05:57  time: 0.3440  data_time: 0.2059  memory: 1533  loss: 0.7889  loss_cls: 0.5138  loss_bbox: 0.2751
2023/06/10 21:49:11 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:13 - mmengine - INFO - Epoch(train)  [37][5/6]  lr: 1.8750e-04  eta: 0:05:54  time: 0.3390  data_time: 0.2011  memory: 1531  loss: 0.7786  loss_cls: 0.4997  loss_bbox: 0.2789
2023/06/10 21:49:13 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:15 - mmengine - INFO - Epoch(train)  [38][5/6]  lr: 1.8750e-04  eta: 0:05:52  time: 0.3455  data_time: 0.2081  memory: 1534  loss: 0.8470  loss_cls: 0.5514  loss_bbox: 0.2956
2023/06/10 21:49:15 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:17 - mmengine - INFO - Epoch(train)  [39][5/6]  lr: 1.8750e-04  eta: 0:05:49  time: 0.3393  data_time: 0.2020  memory: 1533  loss: 0.8320  loss_cls: 0.5397  loss_bbox: 0.2923
2023/06/10 21:49:17 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:19 - mmengine - INFO - Epoch(train)  [40][5/6]  lr: 1.8750e-04  eta: 0:05:46  time: 0.3341  data_time: 0.1972  memory: 1537  loss: 0.7880  loss_cls: 0.5079  loss_bbox: 0.2800
2023/06/10 21:49:19 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:19 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/10 21:49:22 - mmengine - INFO - Epoch(val)  [40][ 5/13]    eta: 0:00:00  time: 0.0915  data_time: 0.0726  memory: 207  
2023/06/10 21:49:22 - mmengine - INFO - Epoch(val)  [40][10/13]    eta: 0:00:00  time: 0.0842  data_time: 0.0653  memory: 105  
2023/06/10 21:49:22 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:49:22 - mmengine - INFO - bbox_mAP_copypaste: 0.730 0.848 0.843 0.000 0.456 0.853
2023/06/10 21:49:22 - mmengine - INFO - Epoch(val) [40][13/13]  coco/bbox_mAP: 0.7300  coco/bbox_mAP_50: 0.8480  coco/bbox_mAP_75: 0.8430  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4560  coco/bbox_mAP_l: 0.8530  data_time: 0.0054  time: 0.0242
2023/06/10 21:49:22 - mmengine - INFO - The previous best checkpoint /root/code/mmdetection/work_dirs/balloon_rtmdet/best_coco/bbox_mAP_epoch_30.pth is removed
2023/06/10 21:49:24 - mmengine - INFO - The best checkpoint with 0.7300 coco/bbox_mAP at 40 epoch is saved to best_coco/bbox_mAP_epoch_40.pth.
2023/06/10 21:49:26 - mmengine - INFO - Epoch(train)  [41][5/6]  lr: 1.8750e-04  eta: 0:05:44  time: 0.3395  data_time: 0.2023  memory: 1536  loss: 0.7907  loss_cls: 0.5068  loss_bbox: 0.2840
2023/06/10 21:49:26 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:28 - mmengine - INFO - Epoch(train)  [42][5/6]  lr: 1.8750e-04  eta: 0:05:42  time: 0.3390  data_time: 0.2011  memory: 1536  loss: 0.8041  loss_cls: 0.5184  loss_bbox: 0.2857
2023/06/10 21:49:28 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:30 - mmengine - INFO - Epoch(train)  [43][5/6]  lr: 1.8750e-04  eta: 0:05:38  time: 0.3365  data_time: 0.1984  memory: 1531  loss: 0.8035  loss_cls: 0.5190  loss_bbox: 0.2845
2023/06/10 21:49:30 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:32 - mmengine - INFO - Epoch(train)  [44][5/6]  lr: 1.8750e-04  eta: 0:05:36  time: 0.3330  data_time: 0.1946  memory: 1534  loss: 0.7716  loss_cls: 0.4940  loss_bbox: 0.2776
2023/06/10 21:49:32 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:34 - mmengine - INFO - Epoch(train)  [45][5/6]  lr: 1.8750e-04  eta: 0:05:33  time: 0.3347  data_time: 0.1968  memory: 1530  loss: 0.7837  loss_cls: 0.5033  loss_bbox: 0.2804
2023/06/10 21:49:34 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:36 - mmengine - INFO - Epoch(train)  [46][5/6]  lr: 1.8750e-04  eta: 0:05:30  time: 0.3290  data_time: 0.1911  memory: 1530  loss: 0.7063  loss_cls: 0.4459  loss_bbox: 0.2605
2023/06/10 21:49:36 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:38 - mmengine - INFO - Epoch(train)  [47][5/6]  lr: 1.8750e-04  eta: 0:05:28  time: 0.3336  data_time: 0.1954  memory: 1534  loss: 0.6963  loss_cls: 0.4386  loss_bbox: 0.2576
2023/06/10 21:49:38 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:40 - mmengine - INFO - Epoch(train)  [48][5/6]  lr: 1.8750e-04  eta: 0:05:25  time: 0.3281  data_time: 0.1898  memory: 1537  loss: 0.7002  loss_cls: 0.4402  loss_bbox: 0.2601
2023/06/10 21:49:40 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:42 - mmengine - INFO - Epoch(train)  [49][5/6]  lr: 1.8750e-04  eta: 0:05:22  time: 0.3204  data_time: 0.1826  memory: 1526  loss: 0.7066  loss_cls: 0.4463  loss_bbox: 0.2603
2023/06/10 21:49:42 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:44 - mmengine - INFO - Epoch(train)  [50][5/6]  lr: 1.8750e-04  eta: 0:05:19  time: 0.3213  data_time: 0.1843  memory: 1558  loss: 0.6953  loss_cls: 0.4359  loss_bbox: 0.2593
2023/06/10 21:49:44 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:44 - mmengine - INFO - Saving checkpoint at 50 epochs
2023/06/10 21:49:47 - mmengine - INFO - Epoch(val)  [50][ 5/13]    eta: 0:00:00  time: 0.0258  data_time: 0.0069  memory: 201  
2023/06/10 21:49:47 - mmengine - INFO - Epoch(val)  [50][10/13]    eta: 0:00:00  time: 0.0259  data_time: 0.0070  memory: 105  
2023/06/10 21:49:47 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:49:47 - mmengine - INFO - bbox_mAP_copypaste: 0.734 0.858 0.831 0.000 0.483 0.852
2023/06/10 21:49:47 - mmengine - INFO - Epoch(val) [50][13/13]  coco/bbox_mAP: 0.7340  coco/bbox_mAP_50: 0.8580  coco/bbox_mAP_75: 0.8310  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4830  coco/bbox_mAP_l: 0.8520  data_time: 0.0048  time: 0.0237
2023/06/10 21:49:47 - mmengine - INFO - The previous best checkpoint /root/code/mmdetection/work_dirs/balloon_rtmdet/best_coco/bbox_mAP_epoch_40.pth is removed
2023/06/10 21:49:49 - mmengine - INFO - The best checkpoint with 0.7340 coco/bbox_mAP at 50 epoch is saved to best_coco/bbox_mAP_epoch_50.pth.
2023/06/10 21:49:51 - mmengine - INFO - Epoch(train)  [51][5/6]  lr: 1.8750e-04  eta: 0:05:17  time: 0.3225  data_time: 0.1862  memory: 1540  loss: 0.6813  loss_cls: 0.4269  loss_bbox: 0.2544
2023/06/10 21:49:51 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:53 - mmengine - INFO - Epoch(train)  [52][5/6]  lr: 1.8750e-04  eta: 0:05:14  time: 0.3214  data_time: 0.1851  memory: 1528  loss: 0.6751  loss_cls: 0.4227  loss_bbox: 0.2524
2023/06/10 21:49:53 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:55 - mmengine - INFO - Epoch(train)  [53][5/6]  lr: 1.8750e-04  eta: 0:05:11  time: 0.3185  data_time: 0.1803  memory: 1532  loss: 0.6704  loss_cls: 0.4191  loss_bbox: 0.2513
2023/06/10 21:49:55 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:57 - mmengine - INFO - Epoch(train)  [54][5/6]  lr: 1.8750e-04  eta: 0:05:10  time: 0.3238  data_time: 0.1844  memory: 1530  loss: 0.6790  loss_cls: 0.4268  loss_bbox: 0.2522
2023/06/10 21:49:57 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:49:59 - mmengine - INFO - Epoch(train)  [55][5/6]  lr: 1.8750e-04  eta: 0:05:07  time: 0.3194  data_time: 0.1802  memory: 1533  loss: 0.7111  loss_cls: 0.4508  loss_bbox: 0.2602
2023/06/10 21:49:59 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:01 - mmengine - INFO - Epoch(train)  [56][5/6]  lr: 1.8750e-04  eta: 0:05:04  time: 0.3214  data_time: 0.1822  memory: 1535  loss: 0.7083  loss_cls: 0.4507  loss_bbox: 0.2576
2023/06/10 21:50:01 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:03 - mmengine - INFO - Epoch(train)  [57][5/6]  lr: 1.8750e-04  eta: 0:05:01  time: 0.3205  data_time: 0.1809  memory: 1531  loss: 0.7007  loss_cls: 0.4430  loss_bbox: 0.2576
2023/06/10 21:50:03 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:05 - mmengine - INFO - Epoch(train)  [58][5/6]  lr: 1.8750e-04  eta: 0:04:59  time: 0.3190  data_time: 0.1784  memory: 1531  loss: 0.6880  loss_cls: 0.4335  loss_bbox: 0.2545
2023/06/10 21:50:05 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:07 - mmengine - INFO - Epoch(train)  [59][5/6]  lr: 1.8750e-04  eta: 0:04:57  time: 0.3222  data_time: 0.1819  memory: 1527  loss: 0.6955  loss_cls: 0.4375  loss_bbox: 0.2580
2023/06/10 21:50:07 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:09 - mmengine - INFO - Epoch(train)  [60][5/6]  lr: 1.8750e-04  eta: 0:04:55  time: 0.3244  data_time: 0.1832  memory: 1538  loss: 0.6876  loss_cls: 0.4273  loss_bbox: 0.2602
2023/06/10 21:50:09 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:09 - mmengine - INFO - Saving checkpoint at 60 epochs
2023/06/10 21:50:11 - mmengine - INFO - Epoch(val)  [60][ 5/13]    eta: 0:00:00  time: 0.0255  data_time: 0.0061  memory: 191  
2023/06/10 21:50:11 - mmengine - INFO - Epoch(val)  [60][10/13]    eta: 0:00:00  time: 0.0255  data_time: 0.0061  memory: 105  
2023/06/10 21:50:11 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:50:11 - mmengine - INFO - bbox_mAP_copypaste: 0.738 0.861 0.858 0.000 0.479 0.854
2023/06/10 21:50:12 - mmengine - INFO - Epoch(val) [60][13/13]  coco/bbox_mAP: 0.7380  coco/bbox_mAP_50: 0.8610  coco/bbox_mAP_75: 0.8580  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4790  coco/bbox_mAP_l: 0.8540  data_time: 0.0049  time: 0.0242
2023/06/10 21:50:12 - mmengine - INFO - The previous best checkpoint /root/code/mmdetection/work_dirs/balloon_rtmdet/best_coco/bbox_mAP_epoch_50.pth is removed
2023/06/10 21:50:14 - mmengine - INFO - The best checkpoint with 0.7380 coco/bbox_mAP at 60 epoch is saved to best_coco/bbox_mAP_epoch_60.pth.
2023/06/10 21:50:16 - mmengine - INFO - Epoch(train)  [61][5/6]  lr: 1.8750e-04  eta: 0:04:52  time: 0.3260  data_time: 0.1857  memory: 1536  loss: 0.6768  loss_cls: 0.4232  loss_bbox: 0.2536
2023/06/10 21:50:16 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:18 - mmengine - INFO - Epoch(train)  [62][5/6]  lr: 1.8750e-04  eta: 0:04:50  time: 0.3223  data_time: 0.1834  memory: 1527  loss: 0.6589  loss_cls: 0.4058  loss_bbox: 0.2531
2023/06/10 21:50:18 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:20 - mmengine - INFO - Epoch(train)  [63][5/6]  lr: 1.8750e-04  eta: 0:04:48  time: 0.3258  data_time: 0.1871  memory: 1534  loss: 0.6310  loss_cls: 0.3853  loss_bbox: 0.2457
2023/06/10 21:50:20 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:22 - mmengine - INFO - Epoch(train)  [64][5/6]  lr: 1.8750e-04  eta: 0:04:46  time: 0.3298  data_time: 0.1915  memory: 1533  loss: 0.6308  loss_cls: 0.3828  loss_bbox: 0.2481
2023/06/10 21:50:22 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:24 - mmengine - INFO - Epoch(train)  [65][5/6]  lr: 1.8750e-04  eta: 0:04:43  time: 0.3331  data_time: 0.1933  memory: 1537  loss: 0.6303  loss_cls: 0.3837  loss_bbox: 0.2466
2023/06/10 21:50:24 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:26 - mmengine - INFO - Epoch(train)  [66][5/6]  lr: 1.8750e-04  eta: 0:04:41  time: 0.3349  data_time: 0.1957  memory: 1540  loss: 0.6322  loss_cls: 0.3843  loss_bbox: 0.2479
2023/06/10 21:50:26 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:28 - mmengine - INFO - Epoch(train)  [67][5/6]  lr: 1.8750e-04  eta: 0:04:40  time: 0.3380  data_time: 0.1994  memory: 1535  loss: 0.6358  loss_cls: 0.3892  loss_bbox: 0.2465
2023/06/10 21:50:28 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:30 - mmengine - INFO - Epoch(train)  [68][5/6]  lr: 1.8750e-04  eta: 0:04:37  time: 0.3368  data_time: 0.1985  memory: 1531  loss: 0.6402  loss_cls: 0.3953  loss_bbox: 0.2449
2023/06/10 21:50:30 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:32 - mmengine - INFO - Epoch(train)  [69][5/6]  lr: 1.8750e-04  eta: 0:04:35  time: 0.3421  data_time: 0.2038  memory: 1554  loss: 0.6300  loss_cls: 0.3849  loss_bbox: 0.2451
2023/06/10 21:50:32 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:35 - mmengine - INFO - Epoch(train)  [70][5/6]  lr: 1.8750e-04  eta: 0:04:33  time: 0.3458  data_time: 0.2070  memory: 1550  loss: 0.6350  loss_cls: 0.3922  loss_bbox: 0.2427
2023/06/10 21:50:35 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:35 - mmengine - INFO - Saving checkpoint at 70 epochs
2023/06/10 21:50:37 - mmengine - INFO - Epoch(val)  [70][ 5/13]    eta: 0:00:00  time: 0.0259  data_time: 0.0065  memory: 192  
2023/06/10 21:50:37 - mmengine - INFO - Epoch(val)  [70][10/13]    eta: 0:00:00  time: 0.0259  data_time: 0.0065  memory: 105  
2023/06/10 21:50:37 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:50:37 - mmengine - INFO - bbox_mAP_copypaste: 0.738 0.848 0.809 0.000 0.459 0.855
2023/06/10 21:50:37 - mmengine - INFO - Epoch(val) [70][13/13]  coco/bbox_mAP: 0.7380  coco/bbox_mAP_50: 0.8480  coco/bbox_mAP_75: 0.8090  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4590  coco/bbox_mAP_l: 0.8550  data_time: 0.0051  time: 0.0246
2023/06/10 21:50:40 - mmengine - INFO - Epoch(train)  [71][5/6]  lr: 1.8750e-04  eta: 0:04:32  time: 0.3499  data_time: 0.2108  memory: 1534  loss: 0.6323  loss_cls: 0.3929  loss_bbox: 0.2394
2023/06/10 21:50:40 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:42 - mmengine - INFO - Epoch(train)  [72][5/6]  lr: 1.8750e-04  eta: 0:04:30  time: 0.3548  data_time: 0.2155  memory: 1532  loss: 0.6088  loss_cls: 0.3746  loss_bbox: 0.2341
2023/06/10 21:50:42 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:44 - mmengine - INFO - Epoch(train)  [73][5/6]  lr: 1.8750e-04  eta: 0:04:28  time: 0.3568  data_time: 0.2188  memory: 1529  loss: 0.6055  loss_cls: 0.3706  loss_bbox: 0.2349
2023/06/10 21:50:44 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:46 - mmengine - INFO - Epoch(train)  [74][5/6]  lr: 1.8750e-04  eta: 0:04:25  time: 0.3516  data_time: 0.2146  memory: 1533  loss: 0.5967  loss_cls: 0.3669  loss_bbox: 0.2298
2023/06/10 21:50:46 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:48 - mmengine - INFO - Epoch(train)  [75][5/6]  lr: 1.8750e-04  eta: 0:04:23  time: 0.3485  data_time: 0.2106  memory: 1533  loss: 0.6016  loss_cls: 0.3657  loss_bbox: 0.2358
2023/06/10 21:50:48 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:50 - mmengine - INFO - Epoch(train)  [76][5/6]  lr: 1.8750e-04  eta: 0:04:21  time: 0.3531  data_time: 0.2155  memory: 1529  loss: 0.5940  loss_cls: 0.3601  loss_bbox: 0.2339
2023/06/10 21:50:50 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:52 - mmengine - INFO - Epoch(train)  [77][5/6]  lr: 1.8750e-04  eta: 0:04:19  time: 0.3497  data_time: 0.2118  memory: 1539  loss: 0.6082  loss_cls: 0.3729  loss_bbox: 0.2353
2023/06/10 21:50:52 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:54 - mmengine - INFO - Epoch(train)  [78][5/6]  lr: 1.8750e-04  eta: 0:04:17  time: 0.3444  data_time: 0.2067  memory: 1533  loss: 0.6081  loss_cls: 0.3727  loss_bbox: 0.2354
2023/06/10 21:50:54 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:56 - mmengine - INFO - Epoch(train)  [79][5/6]  lr: 1.8750e-04  eta: 0:04:15  time: 0.3444  data_time: 0.2070  memory: 1528  loss: 0.5984  loss_cls: 0.3661  loss_bbox: 0.2324
2023/06/10 21:50:57 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:58 - mmengine - INFO - Epoch(train)  [80][5/6]  lr: 1.8750e-04  eta: 0:04:12  time: 0.3359  data_time: 0.1987  memory: 1553  loss: 0.5977  loss_cls: 0.3679  loss_bbox: 0.2298
2023/06/10 21:50:58 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:50:58 - mmengine - INFO - Saving checkpoint at 80 epochs
2023/06/10 21:51:01 - mmengine - INFO - Epoch(val)  [80][ 5/13]    eta: 0:00:00  time: 0.0256  data_time: 0.0063  memory: 201  
2023/06/10 21:51:01 - mmengine - INFO - Epoch(val)  [80][10/13]    eta: 0:00:00  time: 0.0256  data_time: 0.0063  memory: 105  
2023/06/10 21:51:01 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:51:01 - mmengine - INFO - bbox_mAP_copypaste: 0.754 0.866 0.823 0.000 0.496 0.872
2023/06/10 21:51:01 - mmengine - INFO - Epoch(val) [80][13/13]  coco/bbox_mAP: 0.7540  coco/bbox_mAP_50: 0.8660  coco/bbox_mAP_75: 0.8230  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4960  coco/bbox_mAP_l: 0.8720  data_time: 0.0047  time: 0.0240
2023/06/10 21:51:01 - mmengine - INFO - The previous best checkpoint /root/code/mmdetection/work_dirs/balloon_rtmdet/best_coco/bbox_mAP_epoch_60.pth is removed
2023/06/10 21:51:03 - mmengine - INFO - The best checkpoint with 0.7540 coco/bbox_mAP at 80 epoch is saved to best_coco/bbox_mAP_epoch_80.pth.
2023/06/10 21:51:05 - mmengine - INFO - Epoch(train)  [81][5/6]  lr: 1.8750e-04  eta: 0:04:10  time: 0.3349  data_time: 0.1974  memory: 1549  loss: 0.5957  loss_cls: 0.3672  loss_bbox: 0.2285
2023/06/10 21:51:05 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:08 - mmengine - INFO - Epoch(train)  [82][5/6]  lr: 1.8750e-04  eta: 0:04:08  time: 0.3435  data_time: 0.2055  memory: 1531  loss: 0.5982  loss_cls: 0.3701  loss_bbox: 0.2281
2023/06/10 21:51:08 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:09 - mmengine - INFO - Epoch(train)  [83][5/6]  lr: 1.8750e-04  eta: 0:04:06  time: 0.3399  data_time: 0.2018  memory: 1528  loss: 0.5775  loss_cls: 0.3557  loss_bbox: 0.2218
2023/06/10 21:51:09 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:12 - mmengine - INFO - Epoch(train)  [84][5/6]  lr: 1.8750e-04  eta: 0:04:04  time: 0.3390  data_time: 0.2008  memory: 1536  loss: 0.5780  loss_cls: 0.3538  loss_bbox: 0.2242
2023/06/10 21:51:12 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:14 - mmengine - INFO - Epoch(train)  [85][5/6]  lr: 1.8750e-04  eta: 0:04:02  time: 0.3395  data_time: 0.2007  memory: 1559  loss: 0.5682  loss_cls: 0.3457  loss_bbox: 0.2226
2023/06/10 21:51:14 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:16 - mmengine - INFO - Epoch(train)  [86][5/6]  lr: 1.8750e-04  eta: 0:04:00  time: 0.3393  data_time: 0.2016  memory: 1532  loss: 0.5496  loss_cls: 0.3293  loss_bbox: 0.2203
2023/06/10 21:51:16 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:18 - mmengine - INFO - Epoch(train)  [87][5/6]  lr: 1.8750e-04  eta: 0:03:57  time: 0.3337  data_time: 0.1953  memory: 1552  loss: 0.5472  loss_cls: 0.3242  loss_bbox: 0.2231
2023/06/10 21:51:18 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:20 - mmengine - INFO - Epoch(train)  [88][5/6]  lr: 1.8750e-04  eta: 0:03:55  time: 0.3345  data_time: 0.1961  memory: 1531  loss: 0.5514  loss_cls: 0.3242  loss_bbox: 0.2271
2023/06/10 21:51:20 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:22 - mmengine - INFO - Epoch(train)  [89][5/6]  lr: 1.8750e-04  eta: 0:03:53  time: 0.3328  data_time: 0.1948  memory: 1528  loss: 0.5513  loss_cls: 0.3240  loss_bbox: 0.2273
2023/06/10 21:51:22 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:24 - mmengine - INFO - Epoch(train)  [90][5/6]  lr: 1.8750e-04  eta: 0:03:51  time: 0.3296  data_time: 0.1914  memory: 1531  loss: 0.5515  loss_cls: 0.3233  loss_bbox: 0.2282
2023/06/10 21:51:24 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:24 - mmengine - INFO - Saving checkpoint at 90 epochs
2023/06/10 21:51:26 - mmengine - INFO - Epoch(val)  [90][ 5/13]    eta: 0:00:00  time: 0.0258  data_time: 0.0065  memory: 195  
2023/06/10 21:51:26 - mmengine - INFO - Epoch(val)  [90][10/13]    eta: 0:00:00  time: 0.0257  data_time: 0.0065  memory: 105  
2023/06/10 21:51:27 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:51:27 - mmengine - INFO - bbox_mAP_copypaste: 0.754 0.871 0.826 0.000 0.474 0.878
2023/06/10 21:51:27 - mmengine - INFO - Epoch(val) [90][13/13]  coco/bbox_mAP: 0.7540  coco/bbox_mAP_50: 0.8710  coco/bbox_mAP_75: 0.8260  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4740  coco/bbox_mAP_l: 0.8780  data_time: 0.0052  time: 0.0243
2023/06/10 21:51:29 - mmengine - INFO - Epoch(train)  [91][5/6]  lr: 1.8750e-04  eta: 0:03:49  time: 0.3325  data_time: 0.1943  memory: 1529  loss: 0.5633  loss_cls: 0.3312  loss_bbox: 0.2321
2023/06/10 21:51:29 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:30 - mmengine - INFO - Epoch(train)  [92][5/6]  lr: 1.8750e-04  eta: 0:03:46  time: 0.3249  data_time: 0.1866  memory: 1530  loss: 0.5627  loss_cls: 0.3323  loss_bbox: 0.2304
2023/06/10 21:51:31 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:33 - mmengine - INFO - Epoch(train)  [93][5/6]  lr: 1.8750e-04  eta: 0:03:44  time: 0.3265  data_time: 0.1878  memory: 1529  loss: 0.5612  loss_cls: 0.3319  loss_bbox: 0.2293
2023/06/10 21:51:33 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:35 - mmengine - INFO - Epoch(train)  [94][5/6]  lr: 1.8750e-04  eta: 0:03:42  time: 0.3273  data_time: 0.1889  memory: 1546  loss: 0.5535  loss_cls: 0.3312  loss_bbox: 0.2223
2023/06/10 21:51:35 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:37 - mmengine - INFO - Epoch(train)  [95][5/6]  lr: 1.8750e-04  eta: 0:03:40  time: 0.3306  data_time: 0.1916  memory: 1537  loss: 0.5505  loss_cls: 0.3285  loss_bbox: 0.2220
2023/06/10 21:51:37 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:39 - mmengine - INFO - Epoch(train)  [96][5/6]  lr: 1.8750e-04  eta: 0:03:38  time: 0.3312  data_time: 0.1923  memory: 1533  loss: 0.5469  loss_cls: 0.3280  loss_bbox: 0.2189
2023/06/10 21:51:39 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:41 - mmengine - INFO - Epoch(train)  [97][5/6]  lr: 1.8750e-04  eta: 0:03:36  time: 0.3377  data_time: 0.1990  memory: 1535  loss: 0.5427  loss_cls: 0.3254  loss_bbox: 0.2173
2023/06/10 21:51:41 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:43 - mmengine - INFO - Epoch(train)  [98][5/6]  lr: 1.8750e-04  eta: 0:03:34  time: 0.3386  data_time: 0.1997  memory: 1530  loss: 0.5351  loss_cls: 0.3222  loss_bbox: 0.2129
2023/06/10 21:51:43 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:45 - mmengine - INFO - Epoch(train)  [99][5/6]  lr: 1.8750e-04  eta: 0:03:32  time: 0.3401  data_time: 0.2005  memory: 1532  loss: 0.5234  loss_cls: 0.3125  loss_bbox: 0.2110
2023/06/10 21:51:45 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:47 - mmengine - INFO - Epoch(train) [100][5/6]  lr: 1.8750e-04  eta: 0:03:29  time: 0.3426  data_time: 0.2034  memory: 1530  loss: 0.5234  loss_cls: 0.3129  loss_bbox: 0.2105
2023/06/10 21:51:47 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:47 - mmengine - INFO - Saving checkpoint at 100 epochs
2023/06/10 21:51:50 - mmengine - INFO - Epoch(val) [100][ 5/13]    eta: 0:00:00  time: 0.0253  data_time: 0.0065  memory: 197  
2023/06/10 21:51:50 - mmengine - INFO - Epoch(val) [100][10/13]    eta: 0:00:00  time: 0.0254  data_time: 0.0065  memory: 105  
2023/06/10 21:51:50 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:51:50 - mmengine - INFO - bbox_mAP_copypaste: 0.751 0.871 0.842 0.000 0.493 0.872
2023/06/10 21:51:50 - mmengine - INFO - Epoch(val) [100][13/13]  coco/bbox_mAP: 0.7510  coco/bbox_mAP_50: 0.8710  coco/bbox_mAP_75: 0.8420  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4930  coco/bbox_mAP_l: 0.8720  data_time: 0.0049  time: 0.0238
2023/06/10 21:51:52 - mmengine - INFO - Epoch(train) [101][5/6]  lr: 1.8748e-04  eta: 0:03:27  time: 0.3423  data_time: 0.2025  memory: 1557  loss: 0.5401  loss_cls: 0.3250  loss_bbox: 0.2151
2023/06/10 21:51:52 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:54 - mmengine - INFO - Epoch(train) [102][5/6]  lr: 1.8738e-04  eta: 0:03:25  time: 0.3438  data_time: 0.2033  memory: 1534  loss: 0.5383  loss_cls: 0.3209  loss_bbox: 0.2174
2023/06/10 21:51:54 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:56 - mmengine - INFO - Epoch(train) [103][5/6]  lr: 1.8719e-04  eta: 0:03:23  time: 0.3447  data_time: 0.2049  memory: 1537  loss: 0.5431  loss_cls: 0.3255  loss_bbox: 0.2176
2023/06/10 21:51:56 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:51:58 - mmengine - INFO - Epoch(train) [104][5/6]  lr: 1.8691e-04  eta: 0:03:21  time: 0.3451  data_time: 0.2050  memory: 1550  loss: 0.5571  loss_cls: 0.3328  loss_bbox: 0.2243
2023/06/10 21:51:59 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:00 - mmengine - INFO - Epoch(train) [105][5/6]  lr: 1.8654e-04  eta: 0:03:19  time: 0.3377  data_time: 0.1971  memory: 1536  loss: 0.5604  loss_cls: 0.3356  loss_bbox: 0.2248
2023/06/10 21:52:00 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:02 - mmengine - INFO - Epoch(train) [106][5/6]  lr: 1.8609e-04  eta: 0:03:17  time: 0.3323  data_time: 0.1918  memory: 1529  loss: 0.5529  loss_cls: 0.3303  loss_bbox: 0.2226
2023/06/10 21:52:02 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:04 - mmengine - INFO - Epoch(train) [107][5/6]  lr: 1.8555e-04  eta: 0:03:14  time: 0.3293  data_time: 0.1895  memory: 1535  loss: 0.5554  loss_cls: 0.3332  loss_bbox: 0.2222
2023/06/10 21:52:04 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:06 - mmengine - INFO - Epoch(train) [108][5/6]  lr: 1.8493e-04  eta: 0:03:12  time: 0.3299  data_time: 0.1902  memory: 1530  loss: 0.5454  loss_cls: 0.3253  loss_bbox: 0.2200
2023/06/10 21:52:06 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:08 - mmengine - INFO - Epoch(train) [109][5/6]  lr: 1.8422e-04  eta: 0:03:10  time: 0.3321  data_time: 0.1919  memory: 1540  loss: 0.5300  loss_cls: 0.3138  loss_bbox: 0.2162
2023/06/10 21:52:08 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:10 - mmengine - INFO - Epoch(train) [110][5/6]  lr: 1.8342e-04  eta: 0:03:08  time: 0.3300  data_time: 0.1915  memory: 1543  loss: 0.5452  loss_cls: 0.3298  loss_bbox: 0.2154
2023/06/10 21:52:11 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:11 - mmengine - INFO - Saving checkpoint at 110 epochs
2023/06/10 21:52:13 - mmengine - INFO - Epoch(val) [110][ 5/13]    eta: 0:00:00  time: 0.0249  data_time: 0.0060  memory: 195  
2023/06/10 21:52:13 - mmengine - INFO - Epoch(val) [110][10/13]    eta: 0:00:00  time: 0.0248  data_time: 0.0060  memory: 105  
2023/06/10 21:52:13 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:52:13 - mmengine - INFO - bbox_mAP_copypaste: 0.766 0.867 0.842 0.000 0.488 0.892
2023/06/10 21:52:13 - mmengine - INFO - Epoch(val) [110][13/13]  coco/bbox_mAP: 0.7660  coco/bbox_mAP_50: 0.8670  coco/bbox_mAP_75: 0.8420  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4880  coco/bbox_mAP_l: 0.8920  data_time: 0.0049  time: 0.0236
2023/06/10 21:52:13 - mmengine - INFO - The previous best checkpoint /root/code/mmdetection/work_dirs/balloon_rtmdet/best_coco/bbox_mAP_epoch_80.pth is removed
2023/06/10 21:52:15 - mmengine - INFO - The best checkpoint with 0.7660 coco/bbox_mAP at 110 epoch is saved to best_coco/bbox_mAP_epoch_110.pth.
2023/06/10 21:52:17 - mmengine - INFO - Epoch(train) [111][5/6]  lr: 1.8255e-04  eta: 0:03:06  time: 0.3275  data_time: 0.1887  memory: 1539  loss: 0.5348  loss_cls: 0.3203  loss_bbox: 0.2145
2023/06/10 21:52:17 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:19 - mmengine - INFO - Epoch(train) [112][5/6]  lr: 1.8158e-04  eta: 0:03:04  time: 0.3273  data_time: 0.1881  memory: 1537  loss: 0.5297  loss_cls: 0.3194  loss_bbox: 0.2103
2023/06/10 21:52:19 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:21 - mmengine - INFO - Epoch(train) [113][5/6]  lr: 1.8054e-04  eta: 0:03:02  time: 0.3294  data_time: 0.1898  memory: 1558  loss: 0.5191  loss_cls: 0.3110  loss_bbox: 0.2081
2023/06/10 21:52:21 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:24 - mmengine - INFO - Epoch(train) [114][5/6]  lr: 1.7942e-04  eta: 0:03:00  time: 0.3339  data_time: 0.1937  memory: 1532  loss: 0.5291  loss_cls: 0.3196  loss_bbox: 0.2095
2023/06/10 21:52:24 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:25 - mmengine - INFO - Epoch(train) [115][5/6]  lr: 1.7821e-04  eta: 0:02:57  time: 0.3337  data_time: 0.1932  memory: 1526  loss: 0.5260  loss_cls: 0.3165  loss_bbox: 0.2094
2023/06/10 21:52:26 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:27 - mmengine - INFO - Epoch(train) [116][5/6]  lr: 1.7693e-04  eta: 0:02:55  time: 0.3338  data_time: 0.1932  memory: 1537  loss: 0.5353  loss_cls: 0.3255  loss_bbox: 0.2098
2023/06/10 21:52:28 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:29 - mmengine - INFO - Epoch(train) [117][5/6]  lr: 1.7557e-04  eta: 0:02:53  time: 0.3289  data_time: 0.1887  memory: 1535  loss: 0.5415  loss_cls: 0.3321  loss_bbox: 0.2094
2023/06/10 21:52:29 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:31 - mmengine - INFO - Epoch(train) [118][5/6]  lr: 1.7413e-04  eta: 0:02:51  time: 0.3288  data_time: 0.1887  memory: 1535  loss: 0.5275  loss_cls: 0.3165  loss_bbox: 0.2109
2023/06/10 21:52:32 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:34 - mmengine - INFO - Epoch(train) [119][5/6]  lr: 1.7262e-04  eta: 0:02:49  time: 0.3319  data_time: 0.1917  memory: 1535  loss: 0.5383  loss_cls: 0.3239  loss_bbox: 0.2144
2023/06/10 21:52:34 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:36 - mmengine - INFO - Epoch(train) [120][5/6]  lr: 1.7103e-04  eta: 0:02:47  time: 0.3356  data_time: 0.1963  memory: 1535  loss: 0.5266  loss_cls: 0.3134  loss_bbox: 0.2132
2023/06/10 21:52:36 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:36 - mmengine - INFO - Saving checkpoint at 120 epochs
2023/06/10 21:52:38 - mmengine - INFO - Epoch(val) [120][ 5/13]    eta: 0:00:00  time: 0.0255  data_time: 0.0067  memory: 195  
2023/06/10 21:52:39 - mmengine - INFO - Epoch(val) [120][10/13]    eta: 0:00:00  time: 0.0255  data_time: 0.0067  memory: 105  
2023/06/10 21:52:39 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:52:39 - mmengine - INFO - bbox_mAP_copypaste: 0.771 0.878 0.856 0.000 0.486 0.893
2023/06/10 21:52:39 - mmengine - INFO - Epoch(val) [120][13/13]  coco/bbox_mAP: 0.7710  coco/bbox_mAP_50: 0.8780  coco/bbox_mAP_75: 0.8560  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4860  coco/bbox_mAP_l: 0.8930  data_time: 0.0049  time: 0.0237
2023/06/10 21:52:39 - mmengine - INFO - The previous best checkpoint /root/code/mmdetection/work_dirs/balloon_rtmdet/best_coco/bbox_mAP_epoch_110.pth is removed
2023/06/10 21:52:41 - mmengine - INFO - The best checkpoint with 0.7710 coco/bbox_mAP at 120 epoch is saved to best_coco/bbox_mAP_epoch_120.pth.
2023/06/10 21:52:43 - mmengine - INFO - Epoch(train) [121][5/6]  lr: 1.6938e-04  eta: 0:02:45  time: 0.3368  data_time: 0.1975  memory: 1528  loss: 0.5282  loss_cls: 0.3152  loss_bbox: 0.2130
2023/06/10 21:52:43 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:45 - mmengine - INFO - Epoch(train) [122][5/6]  lr: 1.6765e-04  eta: 0:02:43  time: 0.3379  data_time: 0.1986  memory: 1537  loss: 0.5255  loss_cls: 0.3108  loss_bbox: 0.2147
2023/06/10 21:52:45 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:47 - mmengine - INFO - Epoch(train) [123][5/6]  lr: 1.6586e-04  eta: 0:02:41  time: 0.3417  data_time: 0.2033  memory: 1534  loss: 0.5279  loss_cls: 0.3138  loss_bbox: 0.2141
2023/06/10 21:52:47 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:49 - mmengine - INFO - Epoch(train) [124][5/6]  lr: 1.6400e-04  eta: 0:02:39  time: 0.3421  data_time: 0.2044  memory: 1529  loss: 0.5233  loss_cls: 0.3093  loss_bbox: 0.2139
2023/06/10 21:52:49 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:51 - mmengine - INFO - Epoch(train) [125][5/6]  lr: 1.6207e-04  eta: 0:02:36  time: 0.3450  data_time: 0.2067  memory: 1529  loss: 0.5136  loss_cls: 0.2996  loss_bbox: 0.2140
2023/06/10 21:52:51 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:53 - mmengine - INFO - Epoch(train) [126][5/6]  lr: 1.6008e-04  eta: 0:02:34  time: 0.3451  data_time: 0.2067  memory: 1534  loss: 0.5126  loss_cls: 0.2994  loss_bbox: 0.2132
2023/06/10 21:52:53 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:55 - mmengine - INFO - Epoch(train) [127][5/6]  lr: 1.5803e-04  eta: 0:02:32  time: 0.3411  data_time: 0.2030  memory: 1529  loss: 0.5125  loss_cls: 0.3034  loss_bbox: 0.2091
2023/06/10 21:52:55 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:57 - mmengine - INFO - Epoch(train) [128][5/6]  lr: 1.5592e-04  eta: 0:02:30  time: 0.3384  data_time: 0.2004  memory: 1538  loss: 0.5298  loss_cls: 0.3178  loss_bbox: 0.2120
2023/06/10 21:52:58 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:52:59 - mmengine - INFO - Epoch(train) [129][5/6]  lr: 1.5376e-04  eta: 0:02:28  time: 0.3348  data_time: 0.1971  memory: 1530  loss: 0.5367  loss_cls: 0.3235  loss_bbox: 0.2133
2023/06/10 21:52:59 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:01 - mmengine - INFO - Epoch(train) [130][5/6]  lr: 1.5154e-04  eta: 0:02:26  time: 0.3330  data_time: 0.1957  memory: 1530  loss: 0.5226  loss_cls: 0.3166  loss_bbox: 0.2060
2023/06/10 21:53:01 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:01 - mmengine - INFO - Saving checkpoint at 130 epochs
2023/06/10 21:53:04 - mmengine - INFO - Epoch(val) [130][ 5/13]    eta: 0:00:00  time: 0.0249  data_time: 0.0061  memory: 192  
2023/06/10 21:53:04 - mmengine - INFO - Epoch(val) [130][10/13]    eta: 0:00:00  time: 0.0249  data_time: 0.0061  memory: 105  
2023/06/10 21:53:04 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:53:04 - mmengine - INFO - bbox_mAP_copypaste: 0.771 0.875 0.846 0.000 0.488 0.891
2023/06/10 21:53:04 - mmengine - INFO - Epoch(val) [130][13/13]  coco/bbox_mAP: 0.7710  coco/bbox_mAP_50: 0.8750  coco/bbox_mAP_75: 0.8460  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4880  coco/bbox_mAP_l: 0.8910  data_time: 0.0048  time: 0.0235
2023/06/10 21:53:06 - mmengine - INFO - Epoch(train) [131][5/6]  lr: 1.4927e-04  eta: 0:02:24  time: 0.3288  data_time: 0.1917  memory: 1528  loss: 0.5172  loss_cls: 0.3112  loss_bbox: 0.2061
2023/06/10 21:53:06 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:08 - mmengine - INFO - Epoch(train) [132][5/6]  lr: 1.4694e-04  eta: 0:02:22  time: 0.3295  data_time: 0.1924  memory: 1527  loss: 0.5273  loss_cls: 0.3172  loss_bbox: 0.2102
2023/06/10 21:53:08 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:10 - mmengine - INFO - Epoch(train) [133][5/6]  lr: 1.4457e-04  eta: 0:02:19  time: 0.3302  data_time: 0.1931  memory: 1534  loss: 0.5273  loss_cls: 0.3186  loss_bbox: 0.2086
2023/06/10 21:53:10 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:12 - mmengine - INFO - Epoch(train) [134][5/6]  lr: 1.4216e-04  eta: 0:02:17  time: 0.3290  data_time: 0.1921  memory: 1533  loss: 0.5416  loss_cls: 0.3282  loss_bbox: 0.2134
2023/06/10 21:53:12 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:14 - mmengine - INFO - Epoch(train) [135][5/6]  lr: 1.3970e-04  eta: 0:02:15  time: 0.3278  data_time: 0.1910  memory: 1534  loss: 0.5325  loss_cls: 0.3193  loss_bbox: 0.2132
2023/06/10 21:53:14 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:16 - mmengine - INFO - Epoch(train) [136][5/6]  lr: 1.3720e-04  eta: 0:02:13  time: 0.3264  data_time: 0.1894  memory: 1535  loss: 0.5264  loss_cls: 0.3121  loss_bbox: 0.2143
2023/06/10 21:53:16 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:18 - mmengine - INFO - Epoch(train) [137][5/6]  lr: 1.3466e-04  eta: 0:02:11  time: 0.3317  data_time: 0.1942  memory: 1557  loss: 0.5287  loss_cls: 0.3128  loss_bbox: 0.2159
2023/06/10 21:53:18 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:20 - mmengine - INFO - Epoch(train) [138][5/6]  lr: 1.3209e-04  eta: 0:02:09  time: 0.3314  data_time: 0.1941  memory: 1532  loss: 0.5274  loss_cls: 0.3097  loss_bbox: 0.2177
2023/06/10 21:53:21 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:23 - mmengine - INFO - Epoch(train) [139][5/6]  lr: 1.2948e-04  eta: 0:02:07  time: 0.3346  data_time: 0.1962  memory: 1534  loss: 0.5392  loss_cls: 0.3149  loss_bbox: 0.2243
2023/06/10 21:53:23 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:25 - mmengine - INFO - Epoch(train) [140][5/6]  lr: 1.2684e-04  eta: 0:02:05  time: 0.3347  data_time: 0.1968  memory: 1531  loss: 0.5214  loss_cls: 0.3037  loss_bbox: 0.2177
2023/06/10 21:53:25 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:25 - mmengine - INFO - Saving checkpoint at 140 epochs
2023/06/10 21:53:27 - mmengine - INFO - Epoch(val) [140][ 5/13]    eta: 0:00:00  time: 0.0250  data_time: 0.0063  memory: 191  
2023/06/10 21:53:27 - mmengine - INFO - Epoch(val) [140][10/13]    eta: 0:00:00  time: 0.0249  data_time: 0.0063  memory: 105  
2023/06/10 21:53:27 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:53:27 - mmengine - INFO - bbox_mAP_copypaste: 0.774 0.880 0.852 0.000 0.513 0.892
2023/06/10 21:53:27 - mmengine - INFO - Epoch(val) [140][13/13]  coco/bbox_mAP: 0.7740  coco/bbox_mAP_50: 0.8800  coco/bbox_mAP_75: 0.8520  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5130  coco/bbox_mAP_l: 0.8920  data_time: 0.0052  time: 0.0236
2023/06/10 21:53:27 - mmengine - INFO - The previous best checkpoint /root/code/mmdetection/work_dirs/balloon_rtmdet/best_coco/bbox_mAP_epoch_120.pth is removed
2023/06/10 21:53:30 - mmengine - INFO - The best checkpoint with 0.7740 coco/bbox_mAP at 140 epoch is saved to best_coco/bbox_mAP_epoch_140.pth.
2023/06/10 21:53:32 - mmengine - INFO - Epoch(train) [141][5/6]  lr: 1.2418e-04  eta: 0:02:03  time: 0.3376  data_time: 0.2001  memory: 1528  loss: 0.5452  loss_cls: 0.3225  loss_bbox: 0.2226
2023/06/10 21:53:32 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:34 - mmengine - INFO - Epoch(train) [142][5/6]  lr: 1.2149e-04  eta: 0:02:01  time: 0.3357  data_time: 0.1983  memory: 1536  loss: 0.5399  loss_cls: 0.3226  loss_bbox: 0.2174
2023/06/10 21:53:34 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:36 - mmengine - INFO - Epoch(train) [143][5/6]  lr: 1.1877e-04  eta: 0:01:59  time: 0.3436  data_time: 0.2051  memory: 1545  loss: 0.5460  loss_cls: 0.3276  loss_bbox: 0.2184
2023/06/10 21:53:36 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:38 - mmengine - INFO - Epoch(train) [144][5/6]  lr: 1.1604e-04  eta: 0:01:56  time: 0.3403  data_time: 0.2019  memory: 1530  loss: 0.5473  loss_cls: 0.3303  loss_bbox: 0.2170
2023/06/10 21:53:38 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:40 - mmengine - INFO - Epoch(train) [145][5/6]  lr: 1.1329e-04  eta: 0:01:54  time: 0.3389  data_time: 0.2017  memory: 1532  loss: 0.5434  loss_cls: 0.3279  loss_bbox: 0.2155
2023/06/10 21:53:40 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:42 - mmengine - INFO - Epoch(train) [146][5/6]  lr: 1.1052e-04  eta: 0:01:52  time: 0.3453  data_time: 0.2076  memory: 1540  loss: 0.5383  loss_cls: 0.3241  loss_bbox: 0.2142
2023/06/10 21:53:42 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:44 - mmengine - INFO - Epoch(train) [147][5/6]  lr: 1.0775e-04  eta: 0:01:50  time: 0.3476  data_time: 0.2090  memory: 1535  loss: 0.5365  loss_cls: 0.3264  loss_bbox: 0.2101
2023/06/10 21:53:45 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:46 - mmengine - INFO - Epoch(train) [148][5/6]  lr: 1.0496e-04  eta: 0:01:48  time: 0.3461  data_time: 0.2051  memory: 1533  loss: 0.5582  loss_cls: 0.3403  loss_bbox: 0.2179
2023/06/10 21:53:47 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:49 - mmengine - INFO - Epoch(train) [149][5/6]  lr: 1.0217e-04  eta: 0:01:46  time: 0.3436  data_time: 0.2018  memory: 1535  loss: 0.5366  loss_cls: 0.3220  loss_bbox: 0.2146
2023/06/10 21:53:49 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:51 - mmengine - INFO - Epoch(train) [150][5/6]  lr: 9.9370e-05  eta: 0:01:44  time: 0.3468  data_time: 0.2051  memory: 1533  loss: 0.5295  loss_cls: 0.3126  loss_bbox: 0.2169
2023/06/10 21:53:51 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:51 - mmengine - INFO - Saving checkpoint at 150 epochs
2023/06/10 21:53:53 - mmengine - INFO - Epoch(val) [150][ 5/13]    eta: 0:00:00  time: 0.0250  data_time: 0.0065  memory: 191  
2023/06/10 21:53:53 - mmengine - INFO - Epoch(val) [150][10/13]    eta: 0:00:00  time: 0.0251  data_time: 0.0065  memory: 105  
2023/06/10 21:53:53 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:53:54 - mmengine - INFO - bbox_mAP_copypaste: 0.772 0.886 0.844 0.000 0.548 0.886
2023/06/10 21:53:54 - mmengine - INFO - Epoch(val) [150][13/13]  coco/bbox_mAP: 0.7720  coco/bbox_mAP_50: 0.8860  coco/bbox_mAP_75: 0.8440  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5480  coco/bbox_mAP_l: 0.8860  data_time: 0.0046  time: 0.0232
2023/06/10 21:53:56 - mmengine - INFO - Epoch(train) [151][5/6]  lr: 9.6572e-05  eta: 0:01:42  time: 0.3451  data_time: 0.2038  memory: 1537  loss: 0.5282  loss_cls: 0.3125  loss_bbox: 0.2157
2023/06/10 21:53:56 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:53:58 - mmengine - INFO - Epoch(train) [152][5/6]  lr: 9.3776e-05  eta: 0:01:40  time: 0.3482  data_time: 0.2068  memory: 1530  loss: 0.5182  loss_cls: 0.3044  loss_bbox: 0.2138
2023/06/10 21:53:58 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:00 - mmengine - INFO - Epoch(train) [153][5/6]  lr: 9.0985e-05  eta: 0:01:38  time: 0.3499  data_time: 0.2071  memory: 1527  loss: 0.5175  loss_cls: 0.3034  loss_bbox: 0.2141
2023/06/10 21:54:00 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:02 - mmengine - INFO - Epoch(train) [154][5/6]  lr: 8.8201e-05  eta: 0:01:36  time: 0.3436  data_time: 0.1996  memory: 1542  loss: 0.5108  loss_cls: 0.2987  loss_bbox: 0.2121
2023/06/10 21:54:02 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:04 - mmengine - INFO - Epoch(train) [155][5/6]  lr: 8.5427e-05  eta: 0:01:34  time: 0.3401  data_time: 0.1972  memory: 1534  loss: 0.5047  loss_cls: 0.2932  loss_bbox: 0.2115
2023/06/10 21:54:04 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:06 - mmengine - INFO - Epoch(train) [156][5/6]  lr: 8.2666e-05  eta: 0:01:32  time: 0.3417  data_time: 0.2007  memory: 1530  loss: 0.4967  loss_cls: 0.2897  loss_bbox: 0.2070
2023/06/10 21:54:06 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:08 - mmengine - INFO - Epoch(train) [157][5/6]  lr: 7.9920e-05  eta: 0:01:29  time: 0.3362  data_time: 0.1961  memory: 1533  loss: 0.5032  loss_cls: 0.2961  loss_bbox: 0.2071
2023/06/10 21:54:08 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:10 - mmengine - INFO - Epoch(train) [158][5/6]  lr: 7.7193e-05  eta: 0:01:27  time: 0.3345  data_time: 0.1950  memory: 1532  loss: 0.5102  loss_cls: 0.3012  loss_bbox: 0.2090
2023/06/10 21:54:10 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:12 - mmengine - INFO - Epoch(train) [159][5/6]  lr: 7.4487e-05  eta: 0:01:25  time: 0.3316  data_time: 0.1923  memory: 1532  loss: 0.4998  loss_cls: 0.2941  loss_bbox: 0.2057
2023/06/10 21:54:12 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:14 - mmengine - INFO - Epoch(train) [160][5/6]  lr: 7.1804e-05  eta: 0:01:23  time: 0.3357  data_time: 0.1958  memory: 1530  loss: 0.4909  loss_cls: 0.2887  loss_bbox: 0.2022
2023/06/10 21:54:14 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:14 - mmengine - INFO - Saving checkpoint at 160 epochs
2023/06/10 21:54:17 - mmengine - INFO - Epoch(val) [160][ 5/13]    eta: 0:00:00  time: 0.0249  data_time: 0.0060  memory: 196  
2023/06/10 21:54:17 - mmengine - INFO - Epoch(val) [160][10/13]    eta: 0:00:00  time: 0.0249  data_time: 0.0060  memory: 105  
2023/06/10 21:54:17 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:54:17 - mmengine - INFO - bbox_mAP_copypaste: 0.765 0.886 0.837 0.000 0.558 0.874
2023/06/10 21:54:17 - mmengine - INFO - Epoch(val) [160][13/13]  coco/bbox_mAP: 0.7650  coco/bbox_mAP_50: 0.8860  coco/bbox_mAP_75: 0.8370  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5580  coco/bbox_mAP_l: 0.8740  data_time: 0.0049  time: 0.0238
2023/06/10 21:54:19 - mmengine - INFO - Epoch(train) [161][5/6]  lr: 6.9148e-05  eta: 0:01:21  time: 0.3344  data_time: 0.1948  memory: 1532  loss: 0.4873  loss_cls: 0.2855  loss_bbox: 0.2018
2023/06/10 21:54:19 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:21 - mmengine - INFO - Epoch(train) [162][5/6]  lr: 6.6520e-05  eta: 0:01:19  time: 0.3348  data_time: 0.1964  memory: 1531  loss: 0.5001  loss_cls: 0.2938  loss_bbox: 0.2063
2023/06/10 21:54:21 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:23 - mmengine - INFO - Epoch(train) [163][5/6]  lr: 6.3924e-05  eta: 0:01:17  time: 0.3315  data_time: 0.1928  memory: 1533  loss: 0.5097  loss_cls: 0.3002  loss_bbox: 0.2095
2023/06/10 21:54:23 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:25 - mmengine - INFO - Epoch(train) [164][5/6]  lr: 6.1362e-05  eta: 0:01:15  time: 0.3331  data_time: 0.1944  memory: 1539  loss: 0.5052  loss_cls: 0.2970  loss_bbox: 0.2082
2023/06/10 21:54:25 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:27 - mmengine - INFO - Epoch(train) [165][5/6]  lr: 5.8837e-05  eta: 0:01:13  time: 0.3355  data_time: 0.1974  memory: 1528  loss: 0.4924  loss_cls: 0.2894  loss_bbox: 0.2029
2023/06/10 21:54:27 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:29 - mmengine - INFO - Epoch(train) [166][5/6]  lr: 5.6351e-05  eta: 0:01:11  time: 0.3351  data_time: 0.1967  memory: 1528  loss: 0.4950  loss_cls: 0.2910  loss_bbox: 0.2040
2023/06/10 21:54:29 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:31 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:31 - mmengine - INFO - Epoch(train) [167][5/6]  lr: 5.3906e-05  eta: 0:01:09  time: 0.3329  data_time: 0.1943  memory: 1540  loss: 0.4959  loss_cls: 0.2910  loss_bbox: 0.2049
2023/06/10 21:54:31 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:33 - mmengine - INFO - Epoch(train) [168][5/6]  lr: 5.1505e-05  eta: 0:01:06  time: 0.3295  data_time: 0.1904  memory: 1533  loss: 0.5030  loss_cls: 0.2945  loss_bbox: 0.2086
2023/06/10 21:54:33 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:35 - mmengine - INFO - Epoch(train) [169][5/6]  lr: 4.9151e-05  eta: 0:01:04  time: 0.3293  data_time: 0.1907  memory: 1528  loss: 0.5039  loss_cls: 0.2950  loss_bbox: 0.2089
2023/06/10 21:54:35 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:37 - mmengine - INFO - Epoch(train) [170][5/6]  lr: 4.6845e-05  eta: 0:01:02  time: 0.3296  data_time: 0.1914  memory: 1539  loss: 0.4913  loss_cls: 0.2869  loss_bbox: 0.2044
2023/06/10 21:54:37 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:37 - mmengine - INFO - Saving checkpoint at 170 epochs
2023/06/10 21:54:40 - mmengine - INFO - Epoch(val) [170][ 5/13]    eta: 0:00:00  time: 0.0254  data_time: 0.0064  memory: 194  
2023/06/10 21:54:40 - mmengine - INFO - Epoch(val) [170][10/13]    eta: 0:00:00  time: 0.0253  data_time: 0.0064  memory: 105  
2023/06/10 21:54:40 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:54:40 - mmengine - INFO - bbox_mAP_copypaste: 0.762 0.882 0.844 0.000 0.557 0.869
2023/06/10 21:54:40 - mmengine - INFO - Epoch(val) [170][13/13]  coco/bbox_mAP: 0.7620  coco/bbox_mAP_50: 0.8820  coco/bbox_mAP_75: 0.8440  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5570  coco/bbox_mAP_l: 0.8690  data_time: 0.0049  time: 0.0238
2023/06/10 21:54:43 - mmengine - INFO - Epoch(train) [171][5/6]  lr: 4.4590e-05  eta: 0:01:00  time: 0.3407  data_time: 0.2022  memory: 1549  loss: 0.4855  loss_cls: 0.2813  loss_bbox: 0.2042
2023/06/10 21:54:43 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:45 - mmengine - INFO - Epoch(train) [172][5/6]  lr: 4.2389e-05  eta: 0:00:58  time: 0.3380  data_time: 0.1996  memory: 1535  loss: 0.4818  loss_cls: 0.2768  loss_bbox: 0.2050
2023/06/10 21:54:45 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:47 - mmengine - INFO - Epoch(train) [173][5/6]  lr: 4.0242e-05  eta: 0:00:56  time: 0.3381  data_time: 0.1988  memory: 1536  loss: 0.4973  loss_cls: 0.2861  loss_bbox: 0.2112
2023/06/10 21:54:47 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:49 - mmengine - INFO - Epoch(train) [174][5/6]  lr: 3.8153e-05  eta: 0:00:54  time: 0.3413  data_time: 0.2016  memory: 1537  loss: 0.4987  loss_cls: 0.2880  loss_bbox: 0.2108
2023/06/10 21:54:49 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:51 - mmengine - INFO - Epoch(train) [175][5/6]  lr: 3.6124e-05  eta: 0:00:52  time: 0.3467  data_time: 0.2069  memory: 1533  loss: 0.4960  loss_cls: 0.2864  loss_bbox: 0.2096
2023/06/10 21:54:51 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:53 - mmengine - INFO - Epoch(train) [176][5/6]  lr: 3.4156e-05  eta: 0:00:50  time: 0.3454  data_time: 0.2063  memory: 1534  loss: 0.4784  loss_cls: 0.2746  loss_bbox: 0.2038
2023/06/10 21:54:53 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:55 - mmengine - INFO - Epoch(train) [177][5/6]  lr: 3.2251e-05  eta: 0:00:48  time: 0.3479  data_time: 0.2081  memory: 1528  loss: 0.4889  loss_cls: 0.2823  loss_bbox: 0.2066
2023/06/10 21:54:55 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:57 - mmengine - INFO - Epoch(train) [178][5/6]  lr: 3.0412e-05  eta: 0:00:46  time: 0.3456  data_time: 0.2057  memory: 1536  loss: 0.4900  loss_cls: 0.2824  loss_bbox: 0.2076
2023/06/10 21:54:57 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:54:59 - mmengine - INFO - Epoch(train) [179][5/6]  lr: 2.8640e-05  eta: 0:00:44  time: 0.3420  data_time: 0.2021  memory: 1551  loss: 0.4867  loss_cls: 0.2805  loss_bbox: 0.2062
2023/06/10 21:54:59 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:01 - mmengine - INFO - Epoch(train) [180][5/6]  lr: 2.6937e-05  eta: 0:00:42  time: 0.3429  data_time: 0.2031  memory: 1539  loss: 0.4892  loss_cls: 0.2852  loss_bbox: 0.2040
2023/06/10 21:55:02 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:02 - mmengine - INFO - Saving checkpoint at 180 epochs
2023/06/10 21:55:04 - mmengine - INFO - Epoch(val) [180][ 5/13]    eta: 0:00:00  time: 0.0254  data_time: 0.0063  memory: 192  
2023/06/10 21:55:04 - mmengine - INFO - Epoch(val) [180][10/13]    eta: 0:00:00  time: 0.0255  data_time: 0.0063  memory: 105  
2023/06/10 21:55:04 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:55:04 - mmengine - INFO - bbox_mAP_copypaste: 0.783 0.888 0.861 0.000 0.566 0.891
2023/06/10 21:55:04 - mmengine - INFO - Epoch(val) [180][13/13]  coco/bbox_mAP: 0.7830  coco/bbox_mAP_50: 0.8880  coco/bbox_mAP_75: 0.8610  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5660  coco/bbox_mAP_l: 0.8910  data_time: 0.0051  time: 0.0243
2023/06/10 21:55:04 - mmengine - INFO - The previous best checkpoint /root/code/mmdetection/work_dirs/balloon_rtmdet/best_coco/bbox_mAP_epoch_140.pth is removed
2023/06/10 21:55:06 - mmengine - INFO - The best checkpoint with 0.7830 coco/bbox_mAP at 180 epoch is saved to best_coco/bbox_mAP_epoch_180.pth.
2023/06/10 21:55:09 - mmengine - INFO - Epoch(train) [181][5/6]  lr: 2.5304e-05  eta: 0:00:39  time: 0.3499  data_time: 0.2101  memory: 1528  loss: 0.4720  loss_cls: 0.2755  loss_bbox: 0.1965
2023/06/10 21:55:09 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:11 - mmengine - INFO - Epoch(train) [182][5/6]  lr: 2.3743e-05  eta: 0:00:37  time: 0.3477  data_time: 0.2079  memory: 1555  loss: 0.4798  loss_cls: 0.2783  loss_bbox: 0.2015
2023/06/10 21:55:11 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:13 - mmengine - INFO - Epoch(train) [183][5/6]  lr: 2.2257e-05  eta: 0:00:35  time: 0.3464  data_time: 0.2063  memory: 1541  loss: 0.4802  loss_cls: 0.2783  loss_bbox: 0.2019
2023/06/10 21:55:13 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:15 - mmengine - INFO - Epoch(train) [184][5/6]  lr: 2.0845e-05  eta: 0:00:33  time: 0.3512  data_time: 0.2108  memory: 1528  loss: 0.4877  loss_cls: 0.2811  loss_bbox: 0.2066
2023/06/10 21:55:15 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:17 - mmengine - INFO - Epoch(train) [185][5/6]  lr: 1.9510e-05  eta: 0:00:31  time: 0.3478  data_time: 0.2071  memory: 1545  loss: 0.4843  loss_cls: 0.2773  loss_bbox: 0.2070
2023/06/10 21:55:17 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:19 - mmengine - INFO - Epoch(train) [186][5/6]  lr: 1.8253e-05  eta: 0:00:29  time: 0.3461  data_time: 0.2051  memory: 1537  loss: 0.4827  loss_cls: 0.2793  loss_bbox: 0.2034
2023/06/10 21:55:19 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:21 - mmengine - INFO - Epoch(train) [187][5/6]  lr: 1.7075e-05  eta: 0:00:27  time: 0.3424  data_time: 0.2012  memory: 1537  loss: 0.4781  loss_cls: 0.2760  loss_bbox: 0.2021
2023/06/10 21:55:21 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:23 - mmengine - INFO - Epoch(train) [188][5/6]  lr: 1.5977e-05  eta: 0:00:25  time: 0.3405  data_time: 0.1998  memory: 1533  loss: 0.4774  loss_cls: 0.2748  loss_bbox: 0.2026
2023/06/10 21:55:23 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:25 - mmengine - INFO - Epoch(train) [189][5/6]  lr: 1.4961e-05  eta: 0:00:23  time: 0.3358  data_time: 0.1958  memory: 1533  loss: 0.4809  loss_cls: 0.2763  loss_bbox: 0.2046
2023/06/10 21:55:25 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:27 - mmengine - INFO - Epoch(train) [190][5/6]  lr: 1.4027e-05  eta: 0:00:21  time: 0.3353  data_time: 0.1954  memory: 1530  loss: 0.4770  loss_cls: 0.2750  loss_bbox: 0.2019
2023/06/10 21:55:27 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:27 - mmengine - INFO - Saving checkpoint at 190 epochs
2023/06/10 21:55:30 - mmengine - INFO - Epoch(val) [190][ 5/13]    eta: 0:00:00  time: 0.0255  data_time: 0.0063  memory: 198  
2023/06/10 21:55:30 - mmengine - INFO - Epoch(val) [190][10/13]    eta: 0:00:00  time: 0.0255  data_time: 0.0063  memory: 105  
2023/06/10 21:55:30 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:55:30 - mmengine - INFO - bbox_mAP_copypaste: 0.776 0.890 0.839 0.000 0.557 0.884
2023/06/10 21:55:30 - mmengine - INFO - Epoch(val) [190][13/13]  coco/bbox_mAP: 0.7760  coco/bbox_mAP_50: 0.8900  coco/bbox_mAP_75: 0.8390  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5570  coco/bbox_mAP_l: 0.8840  data_time: 0.0049  time: 0.0238
2023/06/10 21:55:32 - mmengine - INFO - Epoch(train) [191][5/6]  lr: 1.3176e-05  eta: 0:00:19  time: 0.3346  data_time: 0.1951  memory: 1554  loss: 0.4731  loss_cls: 0.2742  loss_bbox: 0.1989
2023/06/10 21:55:32 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:34 - mmengine - INFO - Epoch(train) [192][5/6]  lr: 1.2410e-05  eta: 0:00:17  time: 0.3348  data_time: 0.1953  memory: 1532  loss: 0.4706  loss_cls: 0.2741  loss_bbox: 0.1966
2023/06/10 21:55:34 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:36 - mmengine - INFO - Epoch(train) [193][5/6]  lr: 1.1728e-05  eta: 0:00:14  time: 0.3315  data_time: 0.1927  memory: 1536  loss: 0.4707  loss_cls: 0.2741  loss_bbox: 0.1966
2023/06/10 21:55:36 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:38 - mmengine - INFO - Epoch(train) [194][5/6]  lr: 1.1132e-05  eta: 0:00:12  time: 0.3373  data_time: 0.1994  memory: 1527  loss: 0.4784  loss_cls: 0.2793  loss_bbox: 0.1992
2023/06/10 21:55:38 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:40 - mmengine - INFO - Epoch(train) [195][5/6]  lr: 1.0622e-05  eta: 0:00:10  time: 0.3377  data_time: 0.1997  memory: 1531  loss: 0.4816  loss_cls: 0.2813  loss_bbox: 0.2004
2023/06/10 21:55:41 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:41 - mmengine - INFO - Switch pipeline now!
2023/06/10 21:55:45 - mmengine - INFO - Epoch(train) [196][5/6]  lr: 1.0199e-05  eta: 0:00:08  time: 0.3921  data_time: 0.2551  memory: 1527  loss: 0.4693  loss_cls: 0.2772  loss_bbox: 0.1921
2023/06/10 21:55:45 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:47 - mmengine - INFO - Epoch(train) [197][5/6]  lr: 9.8629e-06  eta: 0:00:06  time: 0.3783  data_time: 0.2419  memory: 1530  loss: 0.4529  loss_cls: 0.2713  loss_bbox: 0.1816
2023/06/10 21:55:47 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:48 - mmengine - INFO - Epoch(train) [198][5/6]  lr: 9.6142e-06  eta: 0:00:04  time: 0.3663  data_time: 0.2304  memory: 1523  loss: 0.4471  loss_cls: 0.2674  loss_bbox: 0.1797
2023/06/10 21:55:48 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:49 - mmengine - INFO - Epoch(train) [199][5/6]  lr: 9.4531e-06  eta: 0:00:02  time: 0.3525  data_time: 0.2182  memory: 1529  loss: 0.4354  loss_cls: 0.2610  loss_bbox: 0.1744
2023/06/10 21:55:49 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:51 - mmengine - INFO - Epoch(train) [200][5/6]  lr: 9.3799e-06  eta: 0:00:00  time: 0.3356  data_time: 0.2025  memory: 1529  loss: 0.4244  loss_cls: 0.2559  loss_bbox: 0.1685
2023/06/10 21:55:51 - mmengine - INFO - Exp name: balloon_rtmdet_20230610_214713
2023/06/10 21:55:51 - mmengine - INFO - Saving checkpoint at 200 epochs
2023/06/10 21:55:53 - mmengine - INFO - Epoch(val) [200][ 5/13]    eta: 0:00:00  time: 0.0255  data_time: 0.0064  memory: 191  
2023/06/10 21:55:53 - mmengine - INFO - Epoch(val) [200][10/13]    eta: 0:00:00  time: 0.0255  data_time: 0.0064  memory: 105  
2023/06/10 21:55:54 - mmengine - INFO - Evaluating bbox...
2023/06/10 21:55:54 - mmengine - INFO - bbox_mAP_copypaste: 0.766 0.894 0.837 0.000 0.522 0.880
2023/06/10 21:55:54 - mmengine - INFO - Epoch(val) [200][13/13]  coco/bbox_mAP: 0.7660  coco/bbox_mAP_50: 0.8940  coco/bbox_mAP_75: 0.8370  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5220  coco/bbox_mAP_l: 0.8800  data_time: 0.0049  time: 0.0238
